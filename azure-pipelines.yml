# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-20.04

steps:
- script: |
    sudo apt-get update
    sudo apt-get install -y python bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev
    mkdir -p ~/bin
    curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
    sudo cp ~/bin/repo /bin/repo
    sudo chmod a+x /bin/repo
  displayName: 'Prepare Environment'

- script: |
    mkdir build_area
    cd build_area
    repo init -u https://github.com/PixelExperience-J607F/manifest -b thirteent --depth=1
    repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
    git clone https://github.com/bigsaltyfishes/device_lenovo_J607F.git device/lenovo/J607F -b pe-13.0 --depth=1
    git clone https://github.com/bigsaltyfishes/vendor_lenovo_J607Z.git vendor/lenovo/J607Z -b thirteen --depth=1
    git clone https://github.com/bigsaltyfishes/kernel_lenovo_J607Z.git kernel/lenovo/J607Z -b kernel-next --depth=1
  displayName: 'Sync source code'
  
- script: |
    cd build_area
    export USE_CCACHE=1
    export CCACHE_COMPRESS=1
    . build/envsetup.sh
    lunch aosp_J607F-user
    mka bacon
  displayName: 'Build System'


- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)/build_area/out/target/product/J607F/PixelExperience*.zip'
    publishLocation: 'pipeline'